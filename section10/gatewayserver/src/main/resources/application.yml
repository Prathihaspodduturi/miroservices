spring:
  application:
    name: "gatewayserver"
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lower-case-service-id: true
      httpclient:
        connect-timeout: 1000
        response-timeout: 2s
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s
# httpclient connect - timeout is for how much time this application should wait for the connection with microservice
# response-timeout - for how much time this application should wait for the response from the microservice
# The above are global time out

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true
  info:
    env:
      enabled: true


info:
  app:
    name: "gatewayserver"
    description: "Eazy Bank AGateway Server Application"
    version: "1.0.0"

logging:
  level:
    com:
      eazybytes:
        gatewayserver: DEBUG

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

#slidewinowsize tells ciruciut breaker to broker atleast 10 requests
# permittednumberofcallsinhalfopenstate : in half open state it allows 2 requests
#  failureratethreshold : if atleast 50% requests are failed, then from close to open state
# waitDurationInOpenState : wait for 10 seconds before moving to half open state
